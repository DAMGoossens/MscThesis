#Msc Thesis Dymphy Goossens
#This script entails the first pipeline. This is not a script that can be completly executed from unix. 
#Note: this script requires an index to be used for the HISAT2 step and several documents describing the samples.

###################################################################################################
# Assembly with Hisat2 on Unix
###################################################################################################

progs/hisat2/hisat2 -p 8 -q TAIR10 -U /mnt/scratch2/nijve002/At_WL/1657_A.fastq.gz -S input/1657_A.sam
progs/hisat2/hisat2 -p 8 -q TAIR10 -U /mnt/scratch2/nijve002/At_WL/1657_B.fastq.gz -S input/1657_B.sam
progs/hisat2/hisat2 -p 8 -q TAIR10 -U /mnt/scratch2/nijve002/At_WL/1657_C.fastq.gz -S input/1657_C.sam
progs/hisat2/hisat2 -p 8 -q TAIR10 -U /mnt/scratch2/nijve002/At_WL/1657_M.fastq.gz -S input/1657_M.sam
progs/hisat2/hisat2 -p 8 -q TAIR10 -U /mnt/scratch2/nijve002/At_WL/1657_N.fastq.gz -S input/1657_N.sam
progs/hisat2/hisat2 -p 8 -q TAIR10 -U /mnt/scratch2/nijve002/At_WL/1657_O.fastq.gz -S input/1657_O.sam

###################################################################################################
# Running samtools on Unix
###################################################################################################
#sam to bam
progs/samtools/samtools view -b -@ 8 -o input/1657_A.bam input/1657_A.sam
progs/samtools/samtools view -b -@ 8 -o input/1657_B.bam input/1657_B.sam
progs/samtools/samtools view -b -@ 8 -o input/1657_C.bam input/1657_C.sam
progs/samtools/samtools view -b -@ 8 -o input/1657_M.bam input/1657_M.sam
progs/samtools/samtools view -b -@ 8 -o input/1657_N.bam input/1657_N.sam
progs/samtools/samtools view -b -@ 8 -o input/1657_O.bam input/1657_O.sam

#sorting bam files
progs/samtools/samtools sort -@ 8 input/1657_A.bam -o input/1657_A_sorted.bam
progs/samtools/samtools sort -@ 8 input/1657_B.bam -o input/1657_B_sorted.bam
progs/samtools/samtools sort -@ 8 input/1657_C.bam -o input/1657_C_sorted.bam
progs/samtools/samtools sort -@ 8 input/1657_M.bam -o input/1657_M_sorted.bam
progs/samtools/samtools sort -@ 8 input/1657_N.bam -o input/1657_N_sorted.bam
progs/samtools/samtools sort -@ 8 input/1657_O.bam -o input/1657_O_sorted.bam

#indexing bam files
progs/samtools/samtools index -b input/1657_A_sorted.bam
progs/samtools/samtools index -b input/1657_B_sorted.bam
progs/samtools/samtools index -b input/1657_C_sorted.bam
progs/samtools/samtools index -b input/1657_M_sorted.bam
progs/samtools/samtools index -b input/1657_N_sorted.bam
progs/samtools/samtools index -b input/1657_O_sorted.bam

progs/samtools/samtools flagstat input/1657_A_sorted.bam
progs/samtools/samtools flagstat input/1657_B_sorted.bam
progs/samtools/samtools flagstat input/1657_C_sorted.bam
progs/samtools/samtools flagstat input/1657_M_sorted.bam
progs/samtools/samtools flagstat input/1657_N_sorted.bam
progs/samtools/samtools flagstat input/1657_O_sorted.bam

###################################################################################################
# Running stringtie on Unix
###################################################################################################
#Running stringtie

progs/stringtie/stringtie -e -B -p 8 -G Arab_zCHR.gtf -l BAY_ST -o o_stringtie2/ballgown/1657_A/1657_A.gtf input/1657_A_sorted.bam
progs/stringtie/stringtie -e -B -p 8 -G Arab_zCHR.gtf -l BAY_ST -o o_stringtie2/ballgown/1657_B/1657_B.gtf input/1657_B_sorted.bam
progs/stringtie/stringtie -e -B -p 8 -G Arab_zCHR.gtf -l BAY_ST -o o_stringtie2/ballgown/1657_C/1657_C.gtf input/1657_C_sorted.bam
progs/stringtie/stringtie -e -B -p 8 -G Arab_zCHR.gtf -l BAY_HT -o o_stringtie2/ballgown/1657_M/1657_M.gtf input/1657_M_sorted.bam
progs/stringtie/stringtie -e -B -p 8 -G Arab_zCHR.gtf -l BAY_HT -o o_stringtie2/ballgown/1657_N/1657_N.gtf input/1657_N_sorted.bam
progs/stringtie/stringtie -e -B -p 8 -G Arab_zCHR.gtf -l BAY_HT -o o_stringtie2/ballgown/1657_O/1657_O.gtf input/1657_O_sorted.bam

#Extracting counts
python prepDE.py -i prepDE_pathways.txt -g stringtie_counts.csv 

###################################################################################################
# Running Ballgown in R
###################################################################################################
rm(list=ls(all=TRUE))

#Prepare and load libraries
#source("http://www.bioconductor.org/biocLite.R")
#biocLite(c("ballgown", "genefilter","dplyr","devtools"))
#biocLite(c("ggplot2", "cowplot"))
#install.packages("ggfortify")
#library(devtools) 
#devtools::install_github('alyssafrazee/RSkittleBrewer', force = TRUE)
library(ballgown)
library(RSkittleBrewer) 
library(genefilter)
library(dplyr)
library(ggfortify)
library(ggplot2)
library(cowplot)

getwd()
#setwd("/mnt/scratch/gooss032/o_stringtie")

#Import data
pheno_data = read.csv("ballgown/samplesR.csv", header=TRUE)
bg = ballgown(dataDir = "ballgown", samplePattern="1657_", pData=pheno_data)

#Get expression levels of gene and transcript level
genes.fpkm = gexpr(bg)
trans.fpkm = texpr(bg)

#testing statistical significance
results_genes = stattest(bg, feature="gene", meas="FPKM", covariate="condition", getFC=TRUE)
results_genes = arrange(results_genes,pval)
write.csv(results_genes,"stringtie_ballgown_stht.csv",row.names=FALSE)     

#Testing different libadj
libadj.default = stattest(bg, feature="transcript", meas="FPKM", covariate="condition", getFC=TRUE)
libadj.false = stattest(bg, feature="transcript", meas="FPKM", covariate="condition", getFC=TRUE, libadjust=FALSE)

l.sum = apply(genes.fpkm, 2, sum)
libadj.sum = stattest(bg, feature="transcript", meas="FPKM", covariate="condition", getFC=TRUE, libadj=mean(l.sum)/l.sum)

l.quantile = apply(genes.fpkm, 2, quantile, prob=0.75)
libadj.quantile = stattest(bg, feature="transcript", meas="FPKM", covariate="condition", getFC=TRUE, libadj=mean(l.quantile)/l.quantile)

no.zero <- genes.fpkm[-row(genes.fpkm)[genes.fpkm == 0],]

l.sum.n0 = apply(no.zero, 2, sum)
libadj.sum.n0 = stattest(bg, feature="transcript", meas="FPKM", covariate="condition", getFC=TRUE, libadj=mean(l.sum.n0)/l.sum.n0)

l.quantile.n0 = apply(no.zero, 2, quantile, prob=0.75)
libadj.quantile.n0 = stattest(bg, feature="transcript", meas="FPKM", covariate="condition", getFC=TRUE, libadj=mean(l.quantile.n0)/l.quantile.n0)

lib_data <- data.frame(libadj.default$pval, libadj.false$pval, libadj.sum$pval, libadj.quantile$pval, libadj.sum.n0$pval, libadj.quantile.n0$pval)
colnames(lib_data) = c("default", "false", "sum", "quantile", "sumn0", "quantilen0")
lib_data <- na.omit(lib_data)

pairs(~default+false+sum+quantile+sumn0+quantilen0, data=lib_data)
cor(lib_data)
write.csv(lib_data, "lib_data.csv", row.names=FALSE)
write.csv(cor(lib_data), "cor_lib_data.csv", row.names=FALSE)
