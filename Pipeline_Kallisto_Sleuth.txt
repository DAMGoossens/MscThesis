#Msc Thesis Dymphy Goossens
#This script entails the third pipeline. This is not a script that can be completly executed from unix. 

###################################################################################################
# Running Kallisto on Unix
###################################################################################################
#Creating an index
progs/kallisto/kallisto index -i Ref_Kal.idx input/Arabidopsis_thaliana.TAIR10.cds.all.fa

#ST
progs/kallisto/kallisto quant -i Ref_Kal.idx -o o_kallisto/1657_A -b 100 --single -l 180 -s 20 input/1657_A_run263.fastq.gz
progs/kallisto/kallisto quant -i Ref_Kal.idx -o o_kallisto/1657_B -b 100 --single -l 180 -s 20 input/1657_B_run263.fastq.gz
progs/kallisto/kallisto quant -i Ref_Kal.idx -o o_kallisto/1657_C -b 100 --single -l 180 -s 20 input/1657_C_merged.fastq.gz

#HT
progs/kallisto/kallisto quant -i Ref_Kal.idx -o o_kallisto/1657_M -b 100 --single -l 180 -s 20 input/1657_M_merged.fastq.gz
progs/kallisto/kallisto quant -i Ref_Kal.idx -o o_kallisto/1657_N -b 100 --single -l 180 -s 20 input/1657_N_run265.fastq.gz
progs/kallisto/kallisto quant -i Ref_Kal.idx -o o_kallisto/1657_O -b 100 --single -l 180 -s 20 input/1657_O_run265.fastq.gz

###################################################################################################
# Getting counts in R
###################################################################################################
rm(list=ls(all=TRUE))

#source("https://bioconductor.org/biocLite.R")
#biocLite("tximport")
library(tximport)

setwd("/mnt/scratch/gooss032/")

dir <- "/mnt/scratch/gooss032/o_kallisto"
list.files(dir)

#preparing for reading in files
samples <- read.table(file.path("run_info.txt"), header = TRUE)
samples

files <- file.path(dir, samples$sample, "abundance.tsv")
names(files) <- samples$sample
all(file.exists(files))

#making an annotation object
tx2gene <- read.csv("gene_code_id.csv")
txi <- tximport(files, type="kallisto", tx2gene = tx2gene)            
names(txi)
head(txi$counts)

#write out gene abundances count table
write.csv(txi,"kallisto_counts.csv",row.names=TRUE)

###################################################################################################
# Running Sleuth in R
###################################################################################################
#biocLite("devtools") 
library(devtools)
#biocLite("pachterlab/sleuth")

#Calling libraries
library(sleuth)

#Reading in the data
base_dir <- "/mnt/scratch/gooss032"
sample_id <- dir(file.path(base_dir,"o_kallisto"))
sample_id                      
kal_dirs <- sapply(sample_id, function(id) file.path(base_dir, "o_kallisto", id))
kal_dirs
s2c <- read.table("run_info.txt", header=TRUE, stringsAsFactors=FALSE)
s2c <- dplyr::mutate(s2c, path = kal_dirs)
s2c    						#Don't forget to check if everything corresponds correctly 				

t2g = read.csv("gene_code_id.csv",header=TRUE,stringsAsFactors=FALSE)
colnames(t2g)  = c("target_id","gene_id")

#Constructing the sleuth object
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g, aggregation_column = 'gene_id')  #prepping the data (might take long)
so <- sleuth_fit(so)                                    #fitting the model
so <- sleuth_fit(so, ~1, 'reduced')                     #fitting the reduced model

#Likelihood ratio test
#so <- sleuth_lrt(so, 'reduced', 'full')     #test the model   (likelihood ratio test)
#models(so)

#Wald test
#so <- sleuth_wt(so, 'conditionHT')
so <- sleuth_wt(so, 'conditionST')

#Creating a shiny webpage with all of the results
sleuth_live(so) 

results_table <- sleuth_results(so, 'conditionST', test_type = 'wt')
write.csv(results_table, "kallisto_sleuth_stht.csv", row.names=TRUE)