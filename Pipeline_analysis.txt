#Msc Thesis Dymphy Goossens
#This is the pipeline for analysis done in R

###################################################################################################

# Loading libraries and preparing datasets
###################################################################################################
rm(list=ls(all=TRUE))

setwd("/mnt/scratch/gooss032/o_analysis")

source("http://www.bioconductor.org/biocLite.R")
biocLite("ggplot2")
install.packages("tidyverse")
install.packages("scales")
library(ggplot2)
library(tidyverse)
library(scales)

#reading in all results
#stringtie <- read.csv("stringtie_gene_count_matrix.csv", header=TRUE)
#kallisto <- read.csv("kallisto_count_STHT.csv", header=TRUE)
#star <- read.csv("star_gene_count_matrix.csv", header=TRUE)

#create one master count file
#sika <- merge(stringtie,kallisto, by.x="gene_id", by.y="X")
#names(sika) <- c("id", "si_ST1", "si_ST2", "si_ST3", "si_HT1", "si_HT2", "si_HT3", 
#                 "k_ST1", "k_ST2", "k_ST3", "k_HT1", "k_HT2", "k_HT3")
#sikasa <- merge(sika, star, by.x="id", by.y="id")
#names(sikasa) <- c("id", "si_ST1", "si_ST2", "si_ST3", "si_HT1", "si_HT2", "si_HT3",
#                 "k_ST1", "k_ST2", "k_ST3", "k_HT1", "k_HT2", "k_HT3",
#                 "sa_ST1", "sa_ST2", "sa_ST3", "sa_HT1", "sa_HT2", "sa_HT3")
#write.csv(sikasa, "counts_all_methods.csv", row.names=FALSE)

#stringtie <- read.csv("stringtie_genes_stht.csv", header=TRUE)
#star <- read.csv("star_STHT.csv", header=TRUE)
#star$X <- NULL
#kallisto <- read.csv("kallisto_stht.csv", header=TRUE)

#stsa <- merge(stringtie,star, by.x="id", by.y="id")
#stsa$feature = NULL
#colnames(stsak) <- c("id", "si_fc", "si_pval", "si_qval",
#                    "sa_baseMean", "sa_l2FC", "sa_lfcSE", 
#                    "sa_stat", "sa_pvalue", "sa_padj")
#stsak <- merge(stsa, kallisto, by.x="id", by.y="gene_id")
#stsak$X = NULL
#stsak$target_id = NULL
#colnames(stsak) <- c("id", "si_fc", "si_pval", "si_qval", "sa_baseMean",
#                     "sa_l2FC", "sa_lfcSE", "sa_stat", "sa_pvalue", "sa_padj",
#                     "k_pval", "k_qval", "k_b", "k_se_b", "k_mean_obs", "k_var_obs",
#                     "k_tech_var", "k_sigma_sq", "k_smooth_sigma_sq", "k_final_sigma_sq")
#write.csv(stsak, "table_all_methods_optie.csv", row.names=TRUE)

sikasa <- read.csv("counts_all_methods.csv", header=TRUE)
stsak <- read.csv("table_all_methods.csv", header=TRUE)
stsak2 <- read.csv("table_optie2.csv", header=TRUE)

###################################################################################################

# STEP A: Difference between methods (ST-HT comparison)
###################################################################################################
#Evaluating counts 
sikasa$id <- NULL
sikasa <- scale(sikasa)
stsak$id <- NULL
stsak <- scale(stsak)
stsak2$id <- NULL
stsak2 <- scale(stsak2)

###Evaluating the counts
#Boxplot
boxplot(sikasa, main = "Counts by sample")
boxplot(sikasa, main = "Counts by sample", ylim = c(0,500), las=2)
log_sikasa <- log(sikasa+1)
boxplot(log_sikasa, main = "Log counts by sample", ylim = c(0,0.5), las=2)

#Hiarchical clustering
fit <- hclust(as.dist(1-cor(sikasa, method="pearson")), method="complete")
plot(fit)
fit2 <- hclust(as.dist(1-cor(sikasa, method="spearman")), method="complete")
plot(fit2)

#PCA
count.pca <- prcomp(t(sikasa), center = TRUE, scale. = TRUE)
summary(count.pca)
plot(count.pca, type = "l")
biplot(count.pca, var.axes = FALSE)

#Correlation matrix
cor(sikasa)
pairs(~log(si_ST1)+log(k_ST1)+log(sa_ST1), data=sikasa, main="Scatterplot matrix of ST1 samples")
pairs(~log(si_ST1)+log(si_ST2)+log(si_ST3)+log(k_ST1)+log(k_ST2)+log(k_ST3)+log(sa_ST1)+log(sa_ST2)+log(sa_ST3), data=sikasa, main="Scatterplot matrix of ST samples")
pairs(~log(si_HT1)+log(k_HT1)+log(sa_HT1), data=sikasa, main="Scatterplot matrix of HT1 samples")
pairs(~log(si_HT1)+log(si_HT2)+log(si_HT3)+log(k_HT1)+log(k_HT2)+log(k_HT3)+log(sa_HT1)+log(sa_HT2)+log(sa_HT3), data=sikasa, main="Scatterplot matrix of HT samples")

#Comparing fc vs b values
fcb <- data.frame(stsak$si_fc, stsak$k_b, stsak$sa_l2FC)
names(fcb) = c("si_fc", "k_b", "sa_fc")
fcb$si_fc <- log2(fcb$si_fc)
fcb$k_b <- 2^fcb$k_b
pairs(~si_fc+k_b+sa_fc, fcb, main = "Scatterplot matrix fc v b values")
sum(row.has.na <- apply(fcb, 1, function(x){any(is.na(x))}))  #checking amount of NA
fcb.filtered <- fcb[!row.has.na,]
cor.fcb <- cor(fcb.filtered)

#Evaluating pvalues
pvaluesx <- data.frame(stsak$id, stsak$si_pval, stsak$sa_pvalue, stsak$k_pval)
pvaluesx$stsak.id = NULL
names(pvaluesx) = c("si_pval", "sa_pval", "k_pval")

sum(row.has.na <- apply(pvaluesx, 1, function(x){any(is.na(x))}))  #checking amount of NA
pvalues.filtered <- pvaluesx[!row.has.na,]

cor_pvaluesx <- cor(pvaluesx.filtered)

pvaluesx2 <- data.frame(stsak2$id, stsak2$si_pval, stsak2$sa_pval, stsak2$k_pval)
pvaluesx2$stsak2.id = NULL
names(pvaluesx2) = c("si_pval", "sa_pval", "k_pval")

sum(row.has.na <- apply(pvaluesx2, 1, function(x){any(is.na(x))}))  #checking amount of NA
pvalues2.filtered <- pvaluesx2[!row.has.na,]

cor_pvalues2 <- cor(pvalues2.filtered)

pairs(~si_pval+sa_pval+k_pval, pvaluesx, main="Scatterplot matrix of P values")

graph <- pvaluesx %>% 
            gather(category, value)

ggplot(graph, aes(x = value, fill = category)) +
  geom_histogram(binwidth = 0.1, color = "black", position="stack")

#STAR: ST vs HT
pairs(~sa_ST1+sa_ST2+sa_ST3+sa_HT1+sa_HT2+sa_HT3, data=sikasa, main="Scatterplot matrix of STAR: ST vs HT")
pairs(~log(sa_ST1)+log(sa_ST2)+log(sa_ST3)+log(sa_HT1)+log(sa_HT2)+log(sa_HT3), data=sikasa, main="Scatterplot matrix of STAR: ST vs HT - log values")

###################################################################################################

# STEP B: Difference between methods (ST-HT comparison)
###################################################################################################
#Venn diagram
si <- stringtie
si <- data.frame(si$X, si$pval)
si <- si[order(si$pval, decreasing=FALSE), ]
colnames(si) = c("id", "pval")
si100 <- head(si,100)
si250 <- head(si,250)
si500 <- head(si,500)

sa <- star
sa <- data.frame(sa$id, sa$res.pvalue)
colnames(sa) = c("id", "pval")
sa <- sa[order(sa$pval, decreasing=FALSE), ]
sa100 <- head(sa,100)
sa250 <- head(sa,250)
sa500 <- head(sa,500)

k <- kallisto
k <- data.frame(k$gene_id, k$pval)
colnames(k) = c("id", "pval")
k <- k[order(k$pval, decreasing=FALSE), ]
k100 <- head(k,100)
k250 <- head(k,250)

#Slopegraph kallisto vs star
slope.ksa <- merge(k, sa, by.x="id", by.y="id")
colnames(slope.ksa) = c("id", "kallisto", "star")
slope.ksa <- head(slope.ksa, 100)

l11 <- paste(slope.ksa$id, comma_format()(round(slope.ksa$kallisto)), sep="\n")
l12 <- paste(slope.ksa$id, comma_format()(round(slope.ksa$star)), sep="\n")
p <- ggplot(slope.ksa) + geom_segment(aes(x=0,xend=0.05,y=kallisto,yend=star), size=0.75)

p<-p + theme(panel.background = element_blank())
p<-p + theme(panel.grid=element_blank())
p<-p + theme(axis.ticks=element_blank())
p<-p + theme(axis.text=element_blank())
p<-p + theme(panel.border=element_blank())

p<-p + xlab("Slopegraph Kallisto vs STAR") + ylab("")
p

#Slopegraph stringtie vs star
slope.sisa <- merge(si, sa, by.x="id", by.y="id")
colnames(slope.sisa) = c("id", "stringtie", "star")
slope.sisa <- head(slope.sisa, 100)

l13 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$stringtie)), sep="\n")
l14 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$star)), sep="\n")
q <- ggplot(slope.sisa) + geom_segment(aes(x=0,xend=0.05,y=stringtie,yend=star), size=0.75)

q<-q + theme(panel.background = element_blank())
q<-q + theme(panel.grid=element_blank())
q<-q + theme(axis.ticks=element_blank())
q<-q + theme(axis.text=element_blank())
q<-q + theme(panel.border=element_blank())

q<-q + xlab("Slopegraph Stringtie vs STAR") + ylab("")
q

#Slopegraph stringtie vs kallisto
slope.sik <- merge(si, k, by.x="id", by.y="id")
colnames(slope.sik) = c("id", "stringtie", "kallisto")
slope.sik <- head(slope.sik, 100)

l15 <- paste(slope.sik$id, comma_format()(round(slope.sik$stringtie)), sep="\n")
l16 <- paste(slope.sik$id, comma_format()(round(slope.sik$kallisto)), sep="\n")
r <- ggplot(slope.sik) + geom_segment(aes(x=0,xend=0.05,y=stringtie,yend=kallisto), size=0.75)

r<-r + theme(panel.background = element_blank())
r<-r + theme(panel.grid=element_blank())
r<-r + theme(axis.ticks=element_blank())
r<-r + theme(axis.text=element_blank())
r<-r + theme(panel.border=element_blank())

r<-r + xlab("Slopegraph Stringtie vs Kallisto") + ylab("")
r

