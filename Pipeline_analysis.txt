#Msc Thesis Dymphy Goossens
#This is the pipeline for analysis done in R

###################################################################################################

# Loading libraries and preparing datasets
###################################################################################################
rm(list=ls(all=TRUE))

setwd("/mnt/scratch/gooss032/o_analysis")

source("http://www.bioconductor.org/biocLite.R")
biocLite("ggplot2")
install.packages("tidyverse")
install.packages("VennDiagram")
library(ggplot2)
library(tidyverse)
library(VennDiagram)

#reading in all results
#stringtie <- read.csv("stringtie_gene_count_matrix.csv", header=TRUE)
#kallisto <- read.csv("kallisto_count_STHT.csv", header=TRUE)
#star <- read.csv("star_gene_count_matrix.csv", header=TRUE)

#create one master count file
#sika <- merge(stringtie,kallisto, by.x="gene_id", by.y="X")
#names(sika) <- c("id", "si_ST1", "si_ST2", "si_ST3", "si_HT1", "si_HT2", "si_HT3", 
#                 "k_ST1", "k_ST2", "k_ST3", "k_HT1", "k_HT2", "k_HT3")
#sikasa <- merge(sika, star, by.x="id", by.y="id")
#names(sikasa) <- c("id", "si_ST1", "si_ST2", "si_ST3", "si_HT1", "si_HT2", "si_HT3",
#                 "k_ST1", "k_ST2", "k_ST3", "k_HT1", "k_HT2", "k_HT3",
#                 "sa_ST1", "sa_ST2", "sa_ST3", "sa_HT1", "sa_HT2", "sa_HT3")
#write.csv(sikasa, "counts_all_methods.csv", row.names=FALSE)

#stringtie <- read.csv("stringtie_genes_stht.csv", header=TRUE)
#star <- read.csv("star_STHT.csv", header=TRUE)
#star$X <- NULL
#kallisto <- read.csv("kallisto_stht.csv", header=TRUE)

#stsa <- merge(stringtie,star, by.x="id", by.y="id")
#stsa$feature = NULL
#colnames(stsak) <- c("id", "si_fc", "si_pval", "si_qval",
#                    "sa_baseMean", "sa_l2FC", "sa_lfcSE", 
#                    "sa_stat", "sa_pvalue", "sa_padj")
#stsak <- merge(stsa, kallisto, by.x="id", by.y="gene_id")
#stsak$X = NULL
#stsak$target_id = NULL
#colnames(stsak) <- c("id", "si_fc", "si_pval", "si_qval", "sa_baseMean",
#                     "sa_l2FC", "sa_lfcSE", "sa_stat", "sa_pvalue", "sa_padj",
#                     "k_pval", "k_qval", "k_b", "k_se_b", "k_mean_obs", "k_var_obs",
#                     "k_tech_var", "k_sigma_sq", "k_smooth_sigma_sq", "k_final_sigma_sq")
#write.csv(stsak, "table_all_methods_optie.csv", row.names=TRUE)

sikasa <- read.csv("counts_all_methods.csv", header=TRUE)
stsak <- read.csv("table_all_methods.csv", header=TRUE)

###################################################################################################

# STEP A: Difference between methods (ST-HT comparison)
###################################################################################################
#Evaluating counts 
sikasa$id <- NULL
sikasa <- scale(sikasa)

###Evaluating the counts
#Boxplot
boxplot(sikasa, main = "Counts by sample")
boxplot(sikasa, main = "Counts by sample", ylim = c(0,500), las=2)

#Boxplot of log counts
log_sikasa <- log(sikasa+1)
boxplot(log_sikasa, main = "Log counts by sample", ylim = c(0,0.5), las=2)

#Hiarchical clustering
fit <- hclust(as.dist(1-cor(sikasa), method="pearson")), method="complete")
plot(fit)

#PCA
count.pca <- prcomp(t(sikasa), center = TRUE, scale. = TRUE)
summary(count.pca)
plot(count.pca, type = "l")
biplot(count.pca, var.axes = FALSE)

#Correlation matrix
cor(sikasa)
pairs(~log(si_ST1)+log(k_ST1)+log(sa_ST1), data=sikasa, main="Scatterplot matrix of ST1 samples")
pairs(~log(si_ST1)+log(si_ST2)+log(si_ST3)+log(k_ST1)+log(k_ST2)+log(k_ST3)+log(sa_ST1)+log(sa_ST2)+log(sa_ST3), data=sikasa, main="Scatterplot matrix of ST samples")
pairs(~log(si_HT1)+log(k_HT1)+log(sa_HT1), data=sikasa, main="Scatterplot matrix of HT1 samples")
pairs(~log(si_HT1)+log(si_HT2)+log(si_HT3)+log(k_HT1)+log(k_HT2)+log(k_HT3)+log(sa_HT1)+log(sa_HT2)+log(sa_HT3), data=sikasa, main="Scatterplot matrix of HT samples")

#Comparing fc vs b values
stsak <- scale(stsak)
fcb <- data.frame(stsak$si_fc, stsak$k_b, stsak$sa_l2FC)
names(fcb) = c("si_fc", "k_b", "sa_fc")
fcb$si_fc <- log2(fcb$si_fc)
fcb$k_b <- 2^fcb$k_b
pairs(~si_fc+k_b+sa_fc, fcb, main = "Scatterplot matrix fc v b values")

#Evaluating pvalues
pvalues <- data.frame(stsak$id, stsak$si_pval, stsak$sa_pvalue, stsak$k_pval)
pvaluesx <- pvalues
pvaluesx$stsak.id = NULL
names(pvaluesx) = c("si_pval", "sa_pval", "k_pval")

pairs(~si_pval+sa_pval+k_pval, pvaluesx, main="Scatterplot matrix of P values")

graph <- pvaluesx %>% 
            gather(category, value)

ggplot(graph, aes(x = value, fill = category)) +
  geom_histogram(binwidth = 0.1, color = "black", position="stack")

#STAR: ST vs HT
pairs(~sa_ST1+sa_ST2+sa_ST3+sa_HT1+sa_HT2+sa_HT3, data=sikasa, main="Scatterplot matrix of STAR: ST vs HT")
pairs(~log(sa_ST1)+log(sa_ST2)+log(sa_ST3)+log(sa_HT1)+log(sa_HT2)+log(sa_HT3), data=sikasa, main="Scatterplot matrix of STAR: ST vs HT - log values")

###################################################################################################

# STEP B: Difference between methods (ST-HT comparison)
###################################################################################################
#Venn diagram
si100 <- stringtie
si100 <- si100[order(si100$pvalue, decreasing=FALSE), ]
si100 <- head(si100,100)
si100 <- data.frame(si100$X, si100$pvalue)
colnames(si100) = c("id", "pval")

sa100 <- star
sa100 <- sa100[order(sa100$res.pvalue, decreasing=FALSE), ]
sa100 <- head(sa100,100)
sa100 <- data.frame(sa100$id, sa100$res.pvalue)
colnames(sa100) = c("id", "pval")

k100 <- kallisto
k100 <- k100[order(k100$pvalue, decreasing=FALSE), ]
k100 <- head(k100,100)
k100 <- data.frame(k100$X, k100$pvalue)
colnames(k100) = c("id", "pval")

s_stringtie <- subset(stringtie, stringtie$pvalue < 0.05)
s_s <- data.frame(s_stringtie$X, s_stringtie$pvalue)
colnames(s_s) = c("id", "pvalue")

s_star <- subset(star, star$res.pvalue < 0.05)
s_sa <- data.frame(s_star$id, s_star$res.pvalue)
colnames(s_sa) = c("id", "pvalue")

s_kallisto <- subset(kallisto, kallisto$pvalue < 0.05)
s_k <- data.frame(s_kallisto$X, s_kallisto$pvalue)
colnames(s_k) = c("id", "pvalue")

ss_ss <- merge(s_s, s_sa, by.x="id", by.y="id")
colnames(ss_ss) = c("id", "stringtie", "star")
ss_ss_k <- merge(ss_ss, s_k, by.x="id", by.y="id")
colnames(ss_ss_k) = c("id", "stringtie", "star", "kallisto")
write.csv(ss_ss_k, "significant_transcripts_all_methods.csv", row.names=TRUE)


venn.diagram(
x = list(s_s, s_sa, s_k),
category.names = c("Stringtie" , "STAR" , "Kallisto"),
filename = 'again.png',
        output = TRUE ,
        imagetype="png" ,
        height = 480 , 
        width = 480 , 
        resolution = 300,
        compression = "lzw",
        lwd = 2,
        lty = 'blank',
        fill = c('yellow', 'purple', 'green'),
        cex = 1,
        fontface = "bold",
        fontfamily = "sans",
        cat.cex = 0.6,
        cat.fontface = "bold",
        cat.default.pos = "outer",
        cat.pos = c(-27, 27, 135),
        cat.dist = c(0.055, 0.055, 0.085),
        cat.fontfamily = "sans",
        rotation = 1
        )

#Slopegraph kallisto vs star




library(scales)

#Slopegraph kallisto vs star
slope.ksa <- data.frame("id" = stsak$id,
                        "k_pval" = stsak$k_pval,
                        "sa_pval" = stsak$sa_pval)

l11 <- paste(slope.ksa$id, comma_format()(round(slope.ksa$k_pval)), sep="\n")
l12 <- paste(slope.ksa$id, comma_format()(round(slope.ksa$sa_pval)), sep="\n")
p <- ggplot(slope.ksa) + geom_segment(aes(x=0,xend=0.05,y=k_pval,yend=sa_pval), size=0.75)

p<-p + theme(panel.background = element_blank())
p<-p + theme(panel.grid=element_blank())
p<-p + theme(axis.ticks=element_blank())
p<-p + theme(axis.text=element_blank())
p<-p + theme(panel.border=element_blank())

p<-p + xlab("Slopegraph Kallisto vs STAR - pvalues") + ylab("")
p

#####TOP 100 NEMEN!
#####ANDERS TOP 1000?

#Slopegraph stringtie vs star
slope.sisa <- data.frame("id" = sisak$id,
                        "si_fc" = sisak$si_qval,
                        "sa_fc" = sisak$sa_2tolog2fc)

l13 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$si_fc)), sep="\n")
l14 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$sa_fc)), sep="\n")
q <- ggplot(slope.sisa) + geom_segment(aes(x=0,xend=0.05,y=si_fc,yend=sa_fc), size=0.75)

q<-q + theme(panel.background = element_blank())
q<-q + theme(panel.grid=element_blank())
q<-q + theme(axis.ticks=element_blank())
q<-q + theme(axis.text=element_blank())
q<-q + theme(panel.border=element_blank())

q<-q + xlab("Slopegraph Stringtie vs STAR") + ylab("")
q

#Slopegraph stringtie vs star
slope.sisa <- data.frame("id" = sisak$id,
                        "si_fc" = sisak$si_qval,
                        "sa_fc" = sisak$sa_2tolog2fc)


l15 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$si_fc)), sep="\n")
l16 <- paste(slope.sisa$id, comma_format()(round(slope.ksa$sa_fc)), sep="\n")
r <- ggplot(slope.sisa) + geom_segment(aes(x=0,xend=0.05,y=si_fc,yend=sa_fc), size=0.75)

r<-r + theme(panel.background = element_blank())
r<-r + theme(panel.grid=element_blank())
r<-r + theme(axis.ticks=element_blank())
r<-r + theme(axis.text=element_blank())
r<-r + theme(panel.border=element_blank())

r<-r + xlab("Slopegraph Stringtie vs STAR") + ylab("")
r

