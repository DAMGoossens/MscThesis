#Msc Thesis Dymphy Goossens
#This is the pipeline for analysis done in R

###################################################################################################

# Loading libraries and preparing datasets
###################################################################################################
rm(list=ls(all=TRUE))

setwd("/mnt/scratch/gooss032/o_analysis")

#source("http://www.bioconductor.org/biocLite.R")
#biocLite("ggplot2")
#install.packages("tidyverse")
#install.packages("scales")
#install.packages("VennDiagram")
library(ggplot2)
library(tidyverse)
library(scales)
library(VennDiagram)

#reading in all count results
#c.stringtie <- read.csv("stringtie_counts.csv", header=TRUE)
#c.kallisto <- read.csv("kallisto_counts.csv", header=TRUE)
#c.star <- read.csv("star_gene_count_matrix.csv", header=TRUE)

#create one master count file
#count.data <- merge(c.stringtie,c.kallisto, by.x="gene_id", by.y="X")
#names(count.data) <- c("id", "si_ST1", "si_ST2", "si_ST3", "si_HT1", "si_HT2", "si_HT3", 
#                 "k_ST1", "k_ST2", "k_ST3", "k_HT1", "k_HT2", "k_HT3")
#count.data <- merge(count.data, c.star, by.x="id", by.y="id")
#names(count.data) <- c("id", "si_ST1", "si_ST2", "si_ST3", "si_HT1", "si_HT2", "si_HT3",
#                 "k_ST1", "k_ST2", "k_ST3", "k_HT1", "k_HT2", "k_HT3",
#                 "sa_ST1", "sa_ST2", "sa_ST3", "sa_HT1", "sa_HT2", "sa_HT3")
#write.csv(count.data, "table_counts.csv", row.names=FALSE)

#reading in all results from the original packages
#po.stringtie <- read.csv("stringtie_ballgown_stht.csv", header=TRUE)
#po.stringtie$feature = NULL
#po.star <- read.csv("star_deseq_stht.csv", header=TRUE)
#po.kallisto <- read.csv("kallisto_sleuth_stht.csv", header=TRUE)
#po.kallisto$X = NULL
#po.kallisto$num_aggregated_transcripts = NULL

#po.table <- merge(po.stringtie,po.star, by.x="id", by.y="X")
#colnames(po.table) <- c("id", "si_fc", "si_pval", "si_qval",
#                    "sa_baseMean", "sa_l2FC", "sa_lfcSE", 
#                    "sa_stat", "sa_pval", "sa_padj")
#po.table <- merge(po.table, po.kallisto, by.x="id", by.y="target_id")
#colnames(po.table) <- c("id", "si_fc", "si_pval", "si_qval", "sa_baseMean",
#                     "sa_l2FC", "sa_lfcSE", "sa_stat", "sa_pval", "sa_padj",
#                     "k_mean_obs", "k_pval", "k_qval")
#write.csv(po.table, "table_original.csv", row.names=TRUE)

#reading all results from the deseq analysis
#d.stringtie <- read.csv("stringtie_deseq_stht.csv", header=TRUE)
#d.star <- read.csv("star_deseq_stht.csv", header=TRUE)
#d.kallisto <- read.csv("kallisto_deseq_stht.csv", header=TRUE)

#d.table <- merge(d.stringtie,d.star, by.x="X", by.y="X")
#colnames(d.table) <- c("id", "si_baseMean", "si_l2FC", "si_lfcSE", 
#                    "si_stat", "si_pval", "si_padj",
#                    "sa_baseMean", "sa_l2FC", "sa_lfcSE", 
#                    "sa_stat", "sa_pval", "sa_padj")
#d.table <- merge(d.table, d.kallisto, by.x="id", by.y="X")
#colnames(d.table) <- c("id", "si_baseMean", "si_l2FC", "si_lfcSE", 
#                    "si_stat", "si_pval", "si_padj",
#                    "sa_baseMean", "sa_l2FC", "sa_lfcSE", 
#                    "sa_stat", "sa_pval", "sa_padj",
#                    "k_baseMean", "k_l2FC", "k_lfcSE", 
#                    "k_stat", "k_pval", "k_padj")
#write.csv(d.table, "table_deseq.csv", row.names=TRUE)

count.data <- read.csv("table_counts.csv", header=TRUE)			#previously sikasa
po.table <- read.csv("table_original.csv", header=TRUE)			#previously stsak
d.table <- read.csv("table_deseq.csv", header=TRUE)			#previously stsak2

###################################################################################################

# Analysis of the counts
###################################################################################################
#boxplot
count.ni <- count.data
count.ni$id = NULL
boxplot(count.ni, las=2)
log_counts <- log(count.ni+1)
boxplot(log_counts, las=2)

#hierarchical clustering
p.fit <- hclust(as.dist(1-cor(count.ni, method="pearson")), method="complete")
plot(p.fit)
s.fit <- hclust(as.dist(1-cor(count.ni, method="spearman")), method="complete")
plot(s.fit)

#PCA
count.pca <- prcomp(t(count.ni), center = TRUE, scale. = TRUE)
summary(count.pca)
plot(count.pca, type = "l")
biplot(count.pca, var.axes = FALSE)

#Correlation matrix
cor.count.ni <- cor(count.ni)
write.csv(cor.count.ni, "correlation_counts.csv", row.names=TRUE)
pairs(~log(si_ST1)+log(k_ST1)+log(sa_ST1), data=count.ni, main="Scatterplot matrix of log ST1 samples")
pairs(~log(si_HT1)+log(k_HT1)+log(sa_HT1), data=count.ni, main="Scatterplot matrix of log HT1 samples")

###################################################################################################

# Evaluating the pvalues
###################################################################################################
#Pvalues original pipelines
po.pvalues <- data.frame(po.table$si_pval, po.table$sa_pval, po.table$k_pval)
colnames(po.pvalues) = c("si_pval", "sa_pval", "k_pval")
pon.pvalues <- na.omit(po.pvalues)

cor(pon.pvalues)
pairs(~si_pval+sa_pval+k_pval, pon.pvalues)
pon.graph <- pon.pvalues %>% 
            gather(category, value)
ggplot(pon.graph, aes(x = value, fill = category)) +
  geom_histogram(binwidth = 0.1, color = "black", position="stack")

#Pvalues DESeq pipeline
d.pvalues <- data.frame(d.table$si_pval, d.table$sa_pval, d.table$k_pval)
colnames(d.pvalues) = c("si_pval", "sa_pval", "k_pval")
dn.pvalues <- na.omit(d.pvalues)

cor(dn.pvalues)
pairs(~si_pval+sa_pval+k_pval, dn.pvalues)
dn.graph <- dn.pvalues %>% 
            gather(category, value)
ggplot(dn.graph, aes(x = value, fill = category)) +
  geom_histogram(binwidth = 0.1, color = "black", position="stack")

###################################################################################################

# Difference between methods
###################################################################################################
#Preparing the data
po.stringtie <- read.csv("stringtie_ballgown_stht.csv", header=TRUE)
po.stringtie$feature = NULL
po.star <- read.csv("star_deseq_stht.csv", header=TRUE)
po.kallisto <- read.csv("kallisto_sleuth_stht.csv", header=TRUE)

si <- data.frame(po.stringtie$id, po.stringtie$pval)
colnames(si) = c("id", "pval")
si <- si[order(si$pval, decreasing=FALSE), ]

sa <- data.frame(po.star$X, po.star$pvalue)
colnames(sa) = c("id", "pval")
sa <- sa[order(sa$pval, decreasing=FALSE), ]

k <- data.frame(po.kallisto$target_id, po.kallisto$pval)
colnames(k) = c("id", "pval")
k <- k[order(k$pval, decreasing=FALSE), ]

#Slopegraph Kallisto vs. STAR
slope.ksa <- merge(k, sa, by.x="id", by.y="id")
colnames(slope.ksa) = c("id", "kallisto", "star")
slope.ksa <- head(slope.ksa, 100)

l11 <- paste(slope.ksa$id, comma_format()(round(slope.ksa$kallisto)), sep="\n")
l12 <- paste(slope.ksa$id, comma_format()(round(slope.ksa$star)), sep="\n")
p <- ggplot(slope.ksa) + geom_segment(aes(x=0,xend=0.05,y=kallisto,yend=star), size=0.75)

p<-p + theme(panel.background = element_blank())
p<-p + theme(panel.grid=element_blank())
p<-p + theme(axis.ticks=element_blank())
p<-p + theme(axis.text=element_blank())
p<-p + theme(panel.border=element_blank())

p<-p + xlab("Slopegraph Kallisto vs STAR") + ylab("")
p

#Slopegraph Stringtie vs STAR
slope.sisa <- merge(si, sa, by.x="id", by.y="id")
colnames(slope.sisa) = c("id", "stringtie", "star")
slope.sisa <- head(slope.sisa, 100)

l13 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$stringtie)), sep="\n")
l14 <- paste(slope.sisa$id, comma_format()(round(slope.sisa$star)), sep="\n")
q <- ggplot(slope.sisa) + geom_segment(aes(x=0,xend=0.05,y=stringtie,yend=star), size=0.75)

q<-q + theme(panel.background = element_blank())
q<-q + theme(panel.grid=element_blank())
q<-q + theme(axis.ticks=element_blank())
q<-q + theme(axis.text=element_blank())
q<-q + theme(panel.border=element_blank())

q<-q + xlab("Slopegraph Stringtie vs STAR") + ylab("")
q

#Slopegraph Stringtie vs Kallisto
slope.sik <- merge(si, k, by.x="id", by.y="id")
colnames(slope.sik) = c("id", "stringtie", "kallisto")
slope.sik <- head(slope.sik, 100)

l15 <- paste(slope.sik$id, comma_format()(round(slope.sik$stringtie)), sep="\n")
l16 <- paste(slope.sik$id, comma_format()(round(slope.sik$kallisto)), sep="\n")
r <- ggplot(slope.sik) + geom_segment(aes(x=0,xend=0.05,y=stringtie,yend=kallisto), size=0.75)

r<-r + theme(panel.background = element_blank())
r<-r + theme(panel.grid=element_blank())
r<-r + theme(axis.ticks=element_blank())
r<-r + theme(axis.text=element_blank())
r<-r + theme(panel.border=element_blank())

r<-r + xlab("Slopegraph Stringtie vs Kallisto") + ylab("")
r

#Venndiagram of significant genes
significant <- read.csv("venn_significant.csv" , header=TRUE)

si.significant <- data.frame(significant$stringtie)
sa.significant <- data.frame(significant$star)
k.significant <- data.frame(significant$kallisto)

temp123 <- merge(si.significant, k.significant, by.x="id", by.y="id")
area123 <- dim(merge(temp123, sa.significant, by.x="id", by.y="id"))[1]
area12 <- dim(merge(si.significant, sa.significant, by.x="id", by.y="id"))[1] - area123   #stringtie & star
area23 <- dim(merge(sa.significant, k.significant, by.x="id", by.y="id"))[1] - area123    #star & kallisto
area13 <- dim(merge(si.significant, k.significant, by.x="id", by.y="id"))[1] - area123    #stringtie & kallisto
area1 <- dim(si.significant)[1] - (area12+area13+area123)				  #stringtie
area2 <- dim(sa.significant)[1] - (area12+area23+area123)				  #star
area3 <- dim(k.significant)[1] - (area23+area13+area123)				  #kallisto

###################################################################################################

# Two examples of genes
###################################################################################################

examples <- read.csv("count_examples", header=TRUE)
plot(examples$X, examples$AT1G20630, main = "AT1G20630", las=2)
plot(examples$X, examples$AT5G03180, main = "AT5G03180", las=2)
